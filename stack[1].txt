#   push and pop #  
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
size=5
push(60)
push(70)
push(80)
push(90)
pop()
print(stack)


o/p:
[60,70,80]
------------------------------------------------
#means printing top element
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
def peek():
    if top==-1:
        return "Stack is empty.No top element"
    else:
        return f"The top element is={stack[top]}"
        
size=5
push(60)
push(70)
push(80)
push(90)
push(100)
push(110)
push(120)
pop()
print(stack)
print(peek())

o/p:
[60, 70, 80, 90, 100, 110]
The top element is=60



#   push and pop peek  #  
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
def peek():
    if top==-1:
        return "Stack is empty.No top element"
    else:
        return f"The top element is={stack[top]}"
        
size=5
push(60)
push(70)
push(80)
push(90)
push(100)
push(110)
push(120)
pop()
print(stack)
print(peek())
print("\n")


o/p:
[60, 70, 80, 90, 100, 110]
The top element is=60





#push &  pop
stack=[]
top = -1
def push(value):
    global top
    stack.append(value)
    top+=1
def pop():
    global top
    if top == -1:
        print("Stack is empty.Nothing to pop")
        return
    else:
        stack.pop()
        top-=1
def peek():  #peek element means the elemnt is pushed at last  that element is known as peek elemnt
    if top == -1:
        return "Stack is empty.No Top Elements"
    else:
        return f"Top Elements={stack[top]}"
def display():
    if(top==-1):
        print("Empty")
    else:
        for i in range(top,-1,-1):
            print(stack[i])
push(10)
push(20)
push(30)
push(40)
push(50)
push(60)

pop()
pop()
print(peek())
display()





o/p:
Top Elements=40
40
30
20
10


stack=[]
top = -1
def push(value):
    global top
    stack.append(value)
    top+=1
def pop():
    global top
    if top == -1:
        print("Stack is empty.Nothing to pop")
        return
    else:
        stack.pop()
        top-=1
def peek():  #peek element means the elemnt is pushed at last  that element is known as peek elemnt
    if top == -1:
        return "Stack is empty.No Top Elements"
    else:
        return f"Top Elements={stack[top]}"
def display():
    if(top==-1):
        print("Empty")
    else:
        for i in range(top,-1,-1):
            print(stack[i],end=" ")
push(10)
push(20)
push(30)
push(40)
push(50)
push(60)

pop()
pop()
print(peek())
display()



o/p:
Top Elements=40
40 30 20 10




#   push and pop #  
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
size=5
push(60)
push(70)
push(80)
push(90)
pop()
print(stack)


o/p:
[60,70,80]




#   push and pop #  
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
def peek():
    if top==-1:
        return "Stack is empty.No top element"
    else:
        return f"The top element is={stack[top]}"
        
size=5
push(60)
push(70)
push(80)
push(90)
push(100)
push(110)
push(120)
pop()
print(stack)
print(peek())

o/p:
[60, 70, 80, 90, 100, 110]
The top element is=60



#   push and pop peek  #  
stack=[]
top=-1#this is local variable
def push(value):
    global top#making the top from local to global
    top=-1
    if(top==4):
        return "stack is full"
    else:
        top=top+1
        return stack.append(value)
def pop():
    top=5
    if(top!=-1):
        return stack.pop()
    else:
        top=top-1
        return "The stack is empty"
def peek():
    if top==-1:
        return "Stack is empty.No top element"
    else:
        return f"The top element is={stack[top]}"
        
size=5
push(60)
push(70)
push(80)
push(90)
push(100)
push(110)
push(120)
pop()
print(stack)
print(peek())
print("\n")


o/p:
[60, 70, 80, 90, 100, 110]
The top element is=60




#Top element(peek) push ,pop,display 
stack=[]
top = -1
def push(value):
    global top
    stack.append(value)
    top+=1
def pop():
    global top
    if top == -1:
        print("Stack is empty.Nothing to pop")
        return
    else:
        stack.pop()
        top-=1
def peek():  #peek element means the elemnt is pushed at last  that element is known as peek elemnt
    if top == -1:
        return "Stack is empty.No Top Elements"
    else:
        return f"Top Elements={stack[top]}"
def display():
    if(top==-1):
        print("Empty")
    else:
        for i in range(top,-1,-1):
            print(stack[i])
push(10)
push(20)
push(30)
push(40)
push(50)
push(60)

pop()
pop()
print(peek())
display()


o/p:
Top Elements=40
40
30
20
10




#if we want to display the elemts in one row then
stack=[]
top = -1
def push(value):
    global top
    stack.append(value)
    top+=1
def pop():
    global top
    if top == -1:
        print("Stack is empty.Nothing to pop")
        return
    else:
        stack.pop()
        top-=1
def peek():  #peek element means the elemnt is pushed at last  that element is known as peek elemnt
    if top == -1:
        return "Stack is empty.No Top Elements"
    else:
        return f"Top Elements={stack[top]}"
def display():
    if(top==-1):
        print("Empty")
    else:
        for i in range(top,-1,-1):
            print(stack[i],end=" ")
push(10)
push(20)
push(30)
push(40)
push(50)
push(60)

pop()
pop()
print(peek())
display()



o/p:
Top Elements=40
40 30 20 10


        